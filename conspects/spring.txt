SPRING:
	основной концепт спринга - это инверсия контроля. вместо того чтобы самим создавать экземпляры классов и управлять их завиимостями, spring берет эту работу на себя. спринг реализует инверсию контроля используя dependency injetion.
	Spring IoC Continer (Context) - контект хранит конигурацию нашего приложения и наши бины
	конфигурация спринга может быть реализована помощью XML или Annottion
	спринг оперирует бинами

	singleton - определяет только один бин для каждого контейнера спринг
	prototype - позволяет именть любое кол-во экземпляров бина
	request - создается по одному бину на каждый http запрос
	session - создается по одному бину на каждую http сессию
	global session - создается по одному бину на каждую глобальную http сессию

Транзакционные модели
	local - JDBC
	programmatic - JPA
	declarative - Spring

PROPAGATION:
	REQUIRED - если нет активной транзакции, спринг создаст новую, если уже есть - присоединится
		к текущей трансакции
	SUPPORT - если нет активной трансакции, спринг выполнит действие вне транзакции, если есть -
		присоединится
	MANDATORY - если нет активной трансакции, спринг бросит исключение, если есть - присоединится
	NEVER - если нет транзакции, выполнится без транзакции, если есть - бросит исключение
	NOT_SUPPORTED - если есть транзакция, спринг ее остановит, а потом выполнит вне транзакции
	REQUIRES_NEW - если есть трансакция, спринг ее остановит, а потом откроит новую и выполнит код
		в ней.
	NESTED - если транзакция есть, создает сейв-поинт, если нет работает как required

TRANSACTION PROBLEM:
	DIRTY READ - чтение данных, добавленных или изменённых транзакцией, которая впоследствии
		откатится
	NON REPETABLE READ - при повторном чтении в рамках 1 транзакции ранее прочитанные данные
		оказываются изменёнными.
	PHANTOM READ - при повторном чтении в рамках одной транзакции одна и та же выборка дает
		разные множества строк.

TRANSACTION ISOLATION LEVEL:
	READ_UNCOMMITTED - нет запретов
	READ_COMMITTED - запрет на чтение незакомиченных данных
	REPEATABLE_READ - одна запись - одна транзакция
	SERIALIZABLE - полная изоляция от всевозможных сайд-эффектов
-------------------------------------------------------------------------------------------------



блокировки на дб
explain postgres
